{
    "$schema": "http://json.schemastore.org/template",
    "author": "Christoffer Ljungqvist",
    "classifications": [
      "ASP.NET",
      "Web",
      "WebAPI"
    ],
    "name": ".Net Web Api",
    "description": "A web api solution following CQRS pattern.",
    "groupIdentity": "Dotnet.Custom.WebApi",
    "identity": "Dotnet.Custom.WebApi.CSharp",
    "shortName": "web-api",
    "defaultName": "WebApi",
    "tags": {
      "language": "C#",
      "type": "solution"
    },
    "sourceName": "ApplicationName",
    "preferNameDirectory": true,
    "primaryOutputs": [
        { "path": "ApplicationName-Api/ApplicationName.sln" }
    ],
    "sources": [
        {
          "modifiers": [
                {
                    "condition": "(!Docker)",
                    "exclude":
                    [
                        "ApplicationName-Api/Dockerfile",
                        "ApplicationName-Api/.dockerignore",
                        "docker-compose/docker-compose.yaml",
                        "docker-compose/docker-compose-sql.yaml"
                    ]
                },
                {
                    "condition": "(!ReadMe)",
                    "exclude": 
                    [
                        "ApplicationName-Api/README.md"
                    ]
                },
                {
                    "condition": "(!efsql)",
                    "exclude": [
                        "ApplicationName-Api/ApplicationName.Infrastructure/Persistence/AppDbContext.cs"                                 
                    ]
                },
                {
                    "condition": "(efsql || dappersql)",
                    "exclude": [
                        "docker-compose/docker-compose.yaml"
                    ]
                },
                {
                    "condition": "(!efsql && !dappersql)",
                    "exclude": [
                        "ApplicationName-Api/ApplicationName.Api/appsettings.Docker.json",
                        "docker-compose/docker-compose-sql.yaml",
                        "data/**"
                    ]
                }
            ],
            "rename": {
                "docker-compose/docker-compose.yaml": "docker-compose.yaml",
                "docker-compose/docker-compose-sql.yaml": "docker-compose.yaml"
            }
        }
    ],
    "symbols": {
        "Docker": {
            "type": "parameter",
            "datatype": "bool",
            "description": "Adds an optimised Dockerfile to add the ability to build a Docker image.",
            "defaultValue": "true"
        },
        "ReadMe": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "true",
            "description": "Add a README.md markdown file describing the project."
        },
        "HealthCheck": {
          "type": "parameter",
          "datatype": "bool",
          "defaultValue": "true",
          "description": "Enables the use of healthchecks."
        },
        "HealthCheckPath": {
          "type": "parameter",
          "datatype": "string",
          "defaultValue": "/health",
          "replaces": "HEALTHCHECK-PATH",
          "description": "HealthCheck path. Only necessary if HealthCheck is enabled."
        },
        "efsql":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Enables use of EF Core with SQL database."
        },
        "dappersql":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Enables use of Dapper with SQL database."
        }
    }
}